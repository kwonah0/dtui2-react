name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-singularity:
    runs-on: ubuntu-latest
    needs: build-docker
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Singularity
      uses: eWaterCycle/setup-singularity@v7
      with:
        singularity-version: 3.8.0

    - name: Build Singularity image
      run: |
        # Get the version from tag or input
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="${{ github.event.inputs.version || 'latest' }}"
        fi
        
        echo "Building Singularity image for version: $VERSION"
        
        # Build from Docker image
        singularity build dtui2-${VERSION}.sif docker://ghcr.io/${{ github.repository }}:${VERSION}
        
        # Also create a 'latest' version if this is a tagged release
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          cp dtui2-${VERSION}.sif dtui2-latest.sif
        fi

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dtui2-*.sif
          scripts/run-singularity.sh
          docs/CONTAINER-DEPLOYMENT.md
        body: |
          ## DTUI2 Release ${{ github.ref_name }}
          
          ### üéØ Singularity ÏÇ¨Ïö©Î≤ï
          ```bash
          # Ïù¥ÎØ∏ÏßÄ Îã§Ïö¥Î°úÎìú
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/dtui2-${{ github.ref_name }}.sif
          
          # Ïã§Ìñâ
          singularity run dtui2-${{ github.ref_name }}.sif headless
          ```
          
          ### üê≥ Docker ÏÇ¨Ïö©Î≤ï
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          docker run -it ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
          
          ### üìñ ÏûêÏÑ∏Ìïú ÏÇ¨Ïö©Î≤ï
          [Container Deployment Guide](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/docs/CONTAINER-DEPLOYMENT.md)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-readme:
    runs-on: ubuntu-latest
    needs: [build-docker, build-singularity]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update README with latest release info
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        
        # Update README with latest version info
        sed -i "s/dtui2-v[0-9]\+\.[0-9]\+\.[0-9]\+\.sif/dtui2-${VERSION}.sif/g" README.md || true
        sed -i "s/ghcr\.io\/.*:v[0-9]\+\.[0-9]\+\.[0-9]\+/ghcr.io\/${{ github.repository }}:${VERSION}/g" README.md || true
        
        # Commit if there are changes
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: update README with release ${VERSION} info"
          git push
        fi