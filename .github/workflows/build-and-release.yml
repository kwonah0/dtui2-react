name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-singularity:
    runs-on: ubuntu-latest
    needs: build-docker
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Singularity
      uses: eWaterCycle/setup-singularity@v7
      with:
        singularity-version: 3.8.0

    - name: Get version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build Singularity image from Docker
      run: |
        # Build from the Docker image we just pushed
        singularity build --force \
          dtui2-${{ steps.get_version.outputs.VERSION }}.sif \
          docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
        
        # Also create a 'latest' version
        cp dtui2-${{ steps.get_version.outputs.VERSION }}.sif dtui2-latest.sif

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dtui2-*.sif
          scripts/run-singularity.sh
          docs/CONTAINER-DEPLOYMENT.md
        body: |
          ## DTUI2 Release ${{ steps.get_version.outputs.VERSION }}
          
          ### üéØ Quick Start - Singularity (HPC)
          ```bash
          # Download
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/dtui2-${{ steps.get_version.outputs.VERSION }}.sif
          
          # Run
          singularity run dtui2-${{ steps.get_version.outputs.VERSION }}.sif headless
          ```
          
          ### üê≥ Quick Start - Docker
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
          docker run -it ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}
          ```
          
          ### üìñ Documentation
          - [Container Deployment Guide](docs/CONTAINER-DEPLOYMENT.md)
          - [Full README](README.md)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}